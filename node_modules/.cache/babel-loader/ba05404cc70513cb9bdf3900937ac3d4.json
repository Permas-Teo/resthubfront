{"ast":null,"code":"var _jsxFileName = \"/home/permas/cs3219-ay2021-s1-project-2020-s1-g23/frontend/src/Pages/SignUpPage.js\";\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Layout from '../Templates/Layout';\nimport * as Utils from '../utils';\nimport { signupUser } from '../redux/slices/userSlice';\n\nfunction getErrorSignUpData(signUpData) {\n  if (!signUpData.email) {\n    return 'Email is a required field';\n  }\n\n  if (signUpData.email && !Utils.validateEmail(signUpData.email)) {\n    return 'Email is invalid';\n  }\n\n  if (!signUpData.nickname) {\n    return 'Nickname is a required field';\n  }\n\n  if (!signUpData.password) {\n    return 'Password is a required field';\n  }\n\n  if (signUpData.password !== signUpData.retypePassword) {\n    return 'Retyped password does not match password';\n  } // form is valid, prints no error\n\n\n  return '';\n}\n\nconst initialState = {\n  email: '',\n  nickname: '',\n  password: '',\n  retypePassword: ''\n};\n\nfunction SignUpPage() {\n  const [signUpData, setSignUpData] = useState(initialState);\n  const [error, setError] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory(); // update signup fields\n\n  const handleChange = ({\n    target: {\n      value,\n      name\n    }\n  }) => {\n    setSignUpData({ ...signUpData,\n      [name]: value\n    });\n  };\n\n  const handleClick = () => {\n    const errorMsg = getErrorSignUpData(signUpData);\n\n    if (!errorMsg) {\n      setError('');\n      const email = Utils.trimValue(signUpData.email);\n      dispatch(signupUser(email, signUpData.password, signUpData.nickname));\n      history.push('/');\n    } else {\n      setError(errorMsg);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container fixed-bg-1 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center display-4 pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"PeerPrep\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-top\",\n    name: \"email\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Email\",\n    value: signUpData.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-top\",\n    name: \"nickname\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Nickname\",\n    value: signUpData.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-top\",\n    name: \"password\",\n    type: \"password\",\n    onChange: handleChange,\n    placeholder: \"Password\",\n    value: signUpData.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-top\",\n    name: \"retypePassword\",\n    type: \"password\",\n    onChange: handleChange,\n    placeholder: \"Retype Password\",\n    value: signUpData.retypePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    className: \"mt-5 pp-button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"SignUp\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, error), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/login\",\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Already have an account? Click here to login!\")));\n}\n\nexport default SignUpPage;","map":{"version":3,"sources":["/home/permas/cs3219-ay2021-s1-project-2020-s1-g23/frontend/src/Pages/SignUpPage.js"],"names":["React","useState","Button","useDispatch","useHistory","Layout","Utils","signupUser","getErrorSignUpData","signUpData","email","validateEmail","nickname","password","retypePassword","initialState","SignUpPage","setSignUpData","error","setError","dispatch","history","handleChange","target","value","name","handleClick","errorMsg","trimValue","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Layout from '../Templates/Layout';\nimport * as Utils from '../utils';\nimport { signupUser } from '../redux/slices/userSlice';\n\nfunction getErrorSignUpData(signUpData) {\n  if (!signUpData.email) {\n    return 'Email is a required field';\n  }\n  if (signUpData.email && !Utils.validateEmail(signUpData.email)) {\n    return 'Email is invalid';\n  }\n\n  if (!signUpData.nickname) {\n    return 'Nickname is a required field';\n  }\n\n  if (!signUpData.password) {\n    return 'Password is a required field';\n  }\n\n  if (signUpData.password !== signUpData.retypePassword) {\n    return 'Retyped password does not match password';\n  }\n\n  // form is valid, prints no error\n  return '';\n}\n\nconst initialState = {\n  email: '',\n  nickname: '',\n  password: '',\n  retypePassword: '',\n};\n\nfunction SignUpPage() {\n  const [signUpData, setSignUpData] = useState(initialState);\n  const [error, setError] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // update signup fields\n  const handleChange = ({ target: { value, name } }) => {\n    setSignUpData({ ...signUpData, [name]: value });\n  };\n\n  const handleClick = () => {\n    const errorMsg = getErrorSignUpData(signUpData);\n    if (!errorMsg) {\n      setError('');\n      const email = Utils.trimValue(signUpData.email);\n      dispatch(signupUser(email, signUpData.password, signUpData.nickname));\n      history.push('/');\n    } else {\n      setError(errorMsg);\n    }\n  };\n\n  return (\n    <Layout>\n      <div className=\"container fixed-bg-1 text-center\">\n        <h1 className=\"text-center display-4 pb-5\">PeerPrep</h1>\n        <form>\n          <input\n            className=\"input-top\"\n            name=\"email\"\n            type=\"text\"\n            onChange={handleChange}\n            placeholder=\"Email\"\n            value={signUpData.email}\n          />\n          <br />\n          <input\n            className=\"input-top\"\n            name=\"nickname\"\n            type=\"text\"\n            onChange={handleChange}\n            placeholder=\"Nickname\"\n            value={signUpData.nickname}\n          />\n          <br />\n          <input\n            className=\"input-top\"\n            name=\"password\"\n            type=\"password\"\n            onChange={handleChange}\n            placeholder=\"Password\"\n            value={signUpData.password}\n          />\n          <br />\n          <input\n            className=\"input-top\"\n            name=\"retypePassword\"\n            type=\"password\"\n            onChange={handleChange}\n            placeholder=\"Retype Password\"\n            value={signUpData.retypePassword}\n          />\n        </form>\n        <Button\n          variant=\"primary\"\n          size=\"lg\"\n          className=\"mt-5 pp-button\"\n          onClick={handleClick}\n        >\n          SignUp\n        </Button>\n        <p className=\"error-message\">{error}</p>\n        <br />\n        <a href=\"/login\" className=\"mt-5\">\n          Already have an account? Click here to login!\n        </a>\n      </div>\n    </Layout>\n  );\n}\n\nexport default SignUpPage;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/permas/cs3219-ay2021-s1-project-2020-s1-g23/frontend/src/Pages/LoginPage.js\";\nimport React from 'react';\nimport Layout from '../Templates/Layout';\nimport * as Utils from '../utils';\nimport Button from 'react-bootstrap/Button';\n\nfunction getErrorLoginData(loginData) {\n  if (!loginData.email) {\n    return 'Email is a required field';\n  }\n\n  if (!loginData.password) {\n    return 'Password is a required field';\n  }\n\n  if (loginData.email && !Utils.validateEmail(loginData.email)) {\n    return 'Email is invalid';\n  } // form is valid, prints no error\n\n\n  return '';\n}\n\nconst initialState = {\n  email: \"\",\n  password: \"\"\n};\n\nfunction LoginPage(props) {\n  const [loginData, setLoginData] = useState(initialState);\n  const [error, setError] = useState(\"\"); // update login fields\n\n  const handleChange = ({\n    target: {\n      value,\n      name\n    }\n  }) => {\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleClick = () => {\n    const errorMsg = getErrorLoginData(loginData);\n\n    if (!errorMsg) {// CODE: Send to backend\n    } else {\n      setError(errorMsg);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container fixed-bg text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center display-4 pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"PeerPrep\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-top\",\n    name: \"email\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Email\",\n    value: loginData.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-top\",\n    name: \"password\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Password\",\n    value: loginData.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    className: \"mt-5 pp-button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/signup\",\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Don't have an account? Click here to sign up!\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, error)));\n}\n\nLoginPage.propTypes = {\n  handleChange: PropTypes.func,\n  error: PropTypes.string,\n  handleClick: PropTypes.func,\n  loginData: PropTypes.shape({\n    email: PropTypes.string,\n    password: PropTypes.string\n  })\n};\nexport default LoginPage;","map":{"version":3,"sources":["/home/permas/cs3219-ay2021-s1-project-2020-s1-g23/frontend/src/Pages/LoginPage.js"],"names":["React","Layout","Utils","Button","getErrorLoginData","loginData","email","password","validateEmail","initialState","LoginPage","props","setLoginData","useState","error","setError","handleChange","target","value","name","setFormData","formData","handleClick","errorMsg","propTypes","PropTypes","func","string","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Layout from '../Templates/Layout';\nimport * as Utils from '../utils';\n\nimport Button from 'react-bootstrap/Button';\n\nfunction getErrorLoginData(loginData) {\n  if (!loginData.email) {\n    return 'Email is a required field';\n  }\n  if (!loginData.password) {\n    return 'Password is a required field';\n  }\n  if (loginData.email && !Utils.validateEmail(loginData.email)) {\n    return 'Email is invalid';\n  }\n\n  // form is valid, prints no error\n  return '';\n}\n\nconst initialState = { email: \"\", password: \"\" };\n\nfunction LoginPage(props) {\n  const [loginData, setLoginData] = useState(initialState);\n  const [error,setError] = useState(\"\");\n\n  // update login fields\n  const handleChange = ({ target: { value, name } }) => {\n    setFormData({...formData, [name]: value});\n  };\n\n  const handleClick = () => {\n    const errorMsg = getErrorLoginData(loginData);\n    if (!errorMsg) {\n      // CODE: Send to backend\n    } else {\n      setError(errorMsg);\n    }\n  };\n\n  return (\n    <Layout>\n      <div className=\"container fixed-bg text-center\">\n        <h1 className=\"text-center display-4 pb-5\">PeerPrep</h1>\n        <form>\n          <input className='input-top'\n            name='email'\n            type='text'\n            onChange={handleChange}\n            placeholder=\"Email\"\n            value={loginData.email}\n          />\n          <br></br>\n          <input className='input-top'\n            name='password'\n            type='text'\n            onChange={handleChange}\n            placeholder=\"Password\"\n            value={loginData.password}\n          />\n        </form>\n        <Button \n          variant=\"primary\" \n          size=\"lg\" \n          className=\"mt-5 pp-button\"\n          onClick={handleClick}\n          >\n          Login\n        </Button> \n        <br/><br/><br/>\n        <a href=\"/signup\" className='mt-5'>Don't have an account? Click here to sign up!</a>\n\n        <p className='error-message'>{error}</p>\n      </div>\n    </Layout>\n  );\n}\n\nLoginPage.propTypes = {\n  handleChange: PropTypes.func,\n  error: PropTypes.string,\n  handleClick: PropTypes.func,\n  loginData: PropTypes.shape ({\n    email: PropTypes.string,\n    password: PropTypes.string\n  })\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}
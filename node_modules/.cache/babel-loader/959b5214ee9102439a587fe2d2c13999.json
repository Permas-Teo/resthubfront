{"ast":null,"code":"export const loadState = stateKey => {\n  try {\n    const serializedState = localStorage.getItem(stateKey);\n\n    if (serializedState === null) {\n      return null;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return null;\n  }\n};\nexport const saveState = (stateKey, stateValue) => {\n  try {\n    if (stateValue === null) {\n      localStorage.removeItem(stateKey);\n    } else {\n      const serializedState = JSON.stringify(stateValue);\n      localStorage.setItem(stateKey, serializedState);\n    }\n  } catch (err) {\n    alert(`Failed to persist ${stateKey}: ${stateKey} will be reset when browser is refreshed.`);\n  }\n};\nexport const removeState = stateKey => localStorage.removeItem(stateKey);","map":{"version":3,"sources":["/home/permas/resthubFront/src/redux/localStorage.js"],"names":["loadState","stateKey","serializedState","localStorage","getItem","JSON","parse","err","saveState","stateValue","removeItem","stringify","setItem","alert","removeState"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAIC,QAAD,IAAc;AACrC,MAAI;AACF,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqBH,QAArB,CAAxB;;AACA,QAAIC,eAAe,KAAK,IAAxB,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WAAOG,IAAI,CAACC,KAAL,CAAWJ,eAAX,CAAP;AACD,GAND,CAME,OAAOK,GAAP,EAAY;AACZ,WAAO,IAAP;AACD;AACF,CAVM;AAYP,OAAO,MAAMC,SAAS,GAAG,CAACP,QAAD,EAAWQ,UAAX,KAA0B;AACjD,MAAI;AACF,QAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvBN,MAAAA,YAAY,CAACO,UAAb,CAAwBT,QAAxB;AACD,KAFD,MAEO;AACL,YAAMC,eAAe,GAAGG,IAAI,CAACM,SAAL,CAAeF,UAAf,CAAxB;AACAN,MAAAA,YAAY,CAACS,OAAb,CAAqBX,QAArB,EAA+BC,eAA/B;AACD;AACF,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZM,IAAAA,KAAK,CACF,qBAAoBZ,QAAS,KAAIA,QAAS,2CADxC,CAAL;AAGD;AACF,CAbM;AAeP,OAAO,MAAMa,WAAW,GAAIb,QAAD,IAAcE,YAAY,CAACO,UAAb,CAAwBT,QAAxB,CAAlC","sourcesContent":["export const loadState = (stateKey) => {\n  try {\n    const serializedState = localStorage.getItem(stateKey);\n    if (serializedState === null) {\n      return null;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return null;\n  }\n};\n\nexport const saveState = (stateKey, stateValue) => {\n  try {\n    if (stateValue === null) {\n      localStorage.removeItem(stateKey);\n    } else {\n      const serializedState = JSON.stringify(stateValue);\n      localStorage.setItem(stateKey, serializedState);\n    }\n  } catch (err) {\n    alert(\n      `Failed to persist ${stateKey}: ${stateKey} will be reset when browser is refreshed.`\n    );\n  }\n};\n\nexport const removeState = (stateKey) => localStorage.removeItem(stateKey);\n"]},"metadata":{},"sourceType":"module"}
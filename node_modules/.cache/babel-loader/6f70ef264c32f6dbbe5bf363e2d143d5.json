{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { API_HOST } from '../../consts';\nimport { loadState, removeState, saveState } from '../localStorage';\nconst MATCH_STATE_KEY = 'match';\nconst persistedMatch = loadState(MATCH_STATE_KEY);\nexport const matchSlice = createSlice({\n  name: 'match',\n  initialState: persistedMatch,\n  reducers: {\n    setMatch: (state, action) => action.payload\n  }\n});\nexport const {\n  setMatch\n} = matchSlice.actions;\nexport const getMatch = (email, counter) => dispatch => {\n  if (counter == 0) {\n    return;\n  }\n\n  counter = counter - 1;\n  const apiUrl = `${API_HOST}/match/get?email=${email}`; // console.log(apiUrl);\n\n  fetch(apiUrl, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n\n    if (result.status === true) {\n      saveState(MATCH_STATE_KEY, result);\n      dispatch(setMatch(result));\n    } else if (result.status === false) {\n      // recurse with timeout until succeed\n      setTimeout(() => {\n        dispatch(getMatch(email, counter));\n      }, 5000);\n    } else {\n      throw new Error(result.message);\n    }\n  }).catch(err => console.log(err));\n};\nexport const endMatch = () => dispatch => {\n  removeState(MATCH_STATE_KEY);\n  dispatch(setMatch(null));\n};\nexport const selectMatch = state => state.match;\nexport default matchSlice.reducer;","map":{"version":3,"sources":["/home/permas/cs3219-ay2021-s1-project-2020-s1-g23/frontend/src/redux/slices/matchSlice.js"],"names":["createSlice","API_HOST","loadState","removeState","saveState","MATCH_STATE_KEY","persistedMatch","matchSlice","name","initialState","reducers","setMatch","state","action","payload","actions","getMatch","email","counter","dispatch","apiUrl","fetch","headers","method","then","response","json","result","console","log","status","setTimeout","Error","message","catch","err","endMatch","selectMatch","match","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,iBAAlD;AAEA,MAAMC,eAAe,GAAG,OAAxB;AACA,MAAMC,cAAc,GAAGJ,SAAS,CAACG,eAAD,CAAhC;AAEA,OAAO,MAAME,UAAU,GAAGP,WAAW,CAAC;AACpCQ,EAAAA,IAAI,EAAE,OAD8B;AAEpCC,EAAAA,YAAY,EAAEH,cAFsB;AAGpCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAD5B;AAH0B,CAAD,CAA9B;AAQP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAeJ,UAAU,CAACQ,OAAhC;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAqBC,QAAD,IAAc;AACxD,MAAID,OAAO,IAAI,CAAf,EAAkB;AAChB;AACD;;AACDA,EAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AAEA,QAAME,MAAM,GAAI,GAAEnB,QAAS,oBAAmBgB,KAAM,EAApD,CANwD,CAOxD;;AACAI,EAAAA,KAAK,CAACD,MAAD,EAAS;AACZE,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADG;AAIZC,IAAAA,MAAM,EAAE;AAJI,GAAT,CAAL,CAMGC,IANH,CAMSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANtB,EAOGF,IAPH,CAOSG,MAAD,IAAY;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAIA,MAAM,CAACG,MAAP,KAAkB,IAAtB,EAA6B;AAC3B1B,MAAAA,SAAS,CAACC,eAAD,EAAkBsB,MAAlB,CAAT;AACAR,MAAAA,QAAQ,CAACR,QAAQ,CAACgB,MAAD,CAAT,CAAR;AACD,KAHD,MAGO,IAAIA,MAAM,CAACG,MAAP,KAAkB,KAAtB,EAA6B;AAClC;AACAC,MAAAA,UAAU,CAAC,MAAM;AAAGZ,QAAAA,QAAQ,CAACH,QAAQ,CAACC,KAAD,EAAQC,OAAR,CAAT,CAAR;AAAqC,OAA/C,EAAiD,IAAjD,CAAV;AACD,KAHM,MAGA;AACL,YAAM,IAAIc,KAAJ,CAAUL,MAAM,CAACM,OAAjB,CAAN;AACD;AACF,GAlBH,EAmBGC,KAnBH,CAmBUC,GAAD,IAASP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAnBlB;AAoBD,CA5BM;AA8BP,OAAO,MAAMC,QAAQ,GAAG,MAAOjB,QAAD,IAAc;AAC1ChB,EAAAA,WAAW,CAACE,eAAD,CAAX;AACAc,EAAAA,QAAQ,CAACR,QAAQ,CAAC,IAAD,CAAT,CAAR;AACD,CAHM;AAKP,OAAO,MAAM0B,WAAW,GAAIzB,KAAD,IAAWA,KAAK,CAAC0B,KAArC;AAEP,eAAe/B,UAAU,CAACgC,OAA1B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { API_HOST } from '../../consts';\nimport { loadState, removeState, saveState } from '../localStorage';\n\nconst MATCH_STATE_KEY = 'match';\nconst persistedMatch = loadState(MATCH_STATE_KEY);\n\nexport const matchSlice = createSlice({\n  name: 'match',\n  initialState: persistedMatch,\n  reducers: {\n    setMatch: (state, action) => action.payload,\n  },\n});\n\nexport const { setMatch } = matchSlice.actions;\n\nexport const getMatch = (email, counter) => (dispatch) => {\n  if (counter == 0) {\n    return;\n  }\n  counter = counter - 1;\n\n  const apiUrl = `${API_HOST}/match/get?email=${email}`;\n  // console.log(apiUrl);\n  fetch(apiUrl, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      console.log(result);\n      if (result.status === true ) {\n        saveState(MATCH_STATE_KEY, result);\n        dispatch(setMatch(result));\n      } else if (result.status === false) {\n        // recurse with timeout until succeed\n        setTimeout(() => {  dispatch(getMatch(email, counter)); }, 5000);\n      } else {\n        throw new Error(result.message);\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const endMatch = () => (dispatch) => {\n  removeState(MATCH_STATE_KEY);\n  dispatch(setMatch(null));\n};\n\nexport const selectMatch = (state) => state.match;\n\nexport default matchSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/permas/resthub/frontend/src/Pages/HomePage.js\";\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Layout from '../Templates/Layout';\nimport { getContacts, clearContacts } from '../redux/slices/contactsSlice';\nimport { API_HOST } from '../consts';\n\nconst HomePage = () => {\n  const initialState = {\n    nameGetContact: '',\n    name: '',\n    gender: '',\n    email: '',\n    phone: '',\n    message: ''\n  };\n  const [myData, setMyData] = useState(initialState);\n  const [error, setError] = useState('');\n  const [nameGetContact, setNameGetContact] = useState('');\n  const [name, setName] = useState('');\n  const [gender, setGender] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [message, setMessage] = useState('');\n\n  function getErrorFindContact(myData) {\n    if (myData.nameGetContact == \"\") {\n      return \"Cannot be empty\";\n    }\n\n    return \"\";\n  }\n\n  const ContactComponent = () => {\n    return true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container fixed-bg-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center display-4 pb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, myData.message), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fixed-bg-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Name: \", myData.name), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Email: \", myData.email), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"Gender: \", myData.gender), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Phone: \", myData.phone))) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"nothing\");\n  };\n\n  const dispatch = useDispatch();\n  const history = useHistory(); // update  fields\n\n  const handleChange = ({\n    target: {\n      value,\n      name\n    }\n  }) => {\n    setMyData({ ...myData,\n      [name]: value\n    });\n  }; // // update  fields\n  // const updateMyData = (name, value) => {\n  //   setMyData({ ...myData, [name]: value });\n  // };\n\n\n  function handleClickGetContacts() {\n    // dispatch(clearContact());\n    // dispatch(getContacts());\n    // history.push(\"/allcontacts\");\n    setName(\"result.data.name\");\n    setMessage(\"result.data.name\");\n    setEmail(\"result.data.name\");\n    setPhone(\"result.data.name\");\n    setGender(\"result.data.name\");\n  }\n\n  ;\n\n  function handleClickGetContact() {\n    const errorMsg = getErrorFindContact(myData);\n    let obj = {};\n\n    if (!errorMsg) {\n      setError(''); // dispatch(clearContact());\n      // dispatch(getContact(myData.nameGetContact));\n      // history.push(\"/findcontact\");\n\n      const apiUrl = `${API_HOST}/api/contacts/${myData.nameGetContact}`;\n      fetch(apiUrl, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: 'GET'\n      }).then(response => response.json()).then(result => {\n        obj = result; // updateMyData(\"message\", result.message);  \n        // if (result.data) {\n        //   updateMyData(\"phone\", result.data.phone || '');  \n        //   updateMyData(\"name\", result.data.name || '');  \n        //   updateMyData(\"email\", result.data.email || '');  \n        //   updateMyData(\"gender\", result.data.gender || '');  \n        // }\n      }).catch(err => console.log(err));\n      console.log(obj);\n    } else {\n      setError(errorMsg);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container fixed-bg-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center display-4 pb-5 pt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"RestHub\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    className: \"pp-button-long mb-5\",\n    onClick: handleClickGetContacts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"View All Contacts\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-top\",\n    name: \"nameGetContact\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Contact Name (to find contact by name)\",\n    value: myData.nameGetContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, error)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    className: \"pp-button\",\n    onClick: handleClickGetContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Find Contact\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ContactComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/home/permas/resthub/frontend/src/Pages/HomePage.js"],"names":["React","useState","Button","useDispatch","useHistory","Layout","getContacts","clearContacts","API_HOST","HomePage","initialState","nameGetContact","name","gender","email","phone","message","myData","setMyData","error","setError","setNameGetContact","setName","setGender","setEmail","setPhone","setMessage","getErrorFindContact","ContactComponent","dispatch","history","handleChange","target","value","handleClickGetContacts","handleClickGetContact","errorMsg","obj","apiUrl","fetch","headers","method","then","response","json","result","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Layout from '../Templates/Layout';\nimport { getContacts, clearContacts } from '../redux/slices/contactsSlice';\n\nimport { API_HOST } from '../consts';\n\n\n\nconst HomePage = () => {\n  const initialState = { nameGetContact: '', name: '', gender: '', email: '', phone: '', message: '', };\n  const [myData, setMyData] = useState(initialState);\n  const [error, setError] = useState('');\n\n  const [nameGetContact, setNameGetContact] = useState('');\n  const [name, setName] = useState('');\n  const [gender, setGender] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [message, setMessage] = useState('');\n\n\n  function getErrorFindContact(myData) {\n    if (myData.nameGetContact == \"\") {\n      return \"Cannot be empty\";\n    }\n    return \"\";\n  }\n\n  const ContactComponent = () => {\n    return (\n      true ? (\n      <div className=\"container fixed-bg-3 text-center\">\n      <h1 className=\"text-center display-4 pb-5\">{myData.message}</h1> {/*{contact[\"message\"]} */}\n      <div className=\"fixed-bg-question\">\n          <h3>Name: {myData.name}</h3>\n          <h3>Email: {myData.email}</h3>\n          <h3>Gender: {myData.gender}</h3>\n          <h3>Phone: {myData.phone}</h3>\n        </div>\n      </div>\n      ) : <h1>nothing</h1>\n    );\n  };\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // update  fields\n  const handleChange = ({ target: { value, name } }) => {\n    setMyData({ ...myData, [name]: value });\n  };\n\n  // // update  fields\n  // const updateMyData = (name, value) => {\n  //   setMyData({ ...myData, [name]: value });\n  // };\n\n  function handleClickGetContacts() {\n      // dispatch(clearContact());\n      // dispatch(getContacts());\n      // history.push(\"/allcontacts\");\n\n      setName(\"result.data.name\");  \n      setMessage(\"result.data.name\");  \n      setEmail(\"result.data.name\");  \n      setPhone(\"result.data.name\");  \n      setGender(\"result.data.name\");  \n\n\n  };\n\n  function handleClickGetContact() {\n    const errorMsg = getErrorFindContact(myData);\n    let obj = {};\n    if (!errorMsg) {\n      setError('');\n\n      // dispatch(clearContact());\n      // dispatch(getContact(myData.nameGetContact));\n      // history.push(\"/findcontact\");\n      const apiUrl = `${API_HOST}/api/contacts/${myData.nameGetContact}`; \n      fetch(apiUrl, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method: 'GET',\n        })\n          .then((response) => response.json())\n          .then((result) => {\n            obj = result;\n            // updateMyData(\"message\", result.message);  \n            // if (result.data) {\n            //   updateMyData(\"phone\", result.data.phone || '');  \n            //   updateMyData(\"name\", result.data.name || '');  \n            //   updateMyData(\"email\", result.data.email || '');  \n            //   updateMyData(\"gender\", result.data.gender || '');  \n            // }\n            \n          })\n          .catch((err) => console.log(err)\n        );\n\n        console.log(obj);\n\n\n    \n      } else {\n        setError(errorMsg);\n      }\n};\n\n  return (\n    <Layout>\n      <div className=\"container fixed-bg-3 text-center\">\n        <h1 className=\"text-center display-4 pb-5 pt-5\">RestHub</h1>\n        <Button\n          variant=\"primary\"\n          size=\"lg\"\n          className=\"pp-button-long mb-5\"\n          onClick={handleClickGetContacts}\n        >View All Contacts\n        </Button>\n\n        <form>\n          <input\n            className=\"input-top\"\n            name=\"nameGetContact\"\n            type=\"text\"\n            onChange={handleChange}\n            placeholder=\"Contact Name (to find contact by name)\"\n            value={myData.nameGetContact}\n          />\n          <p className=\"error-message\">{error}</p>\n        </form>\n        <Button\n          variant=\"primary\"\n          size=\"lg\"\n          className=\"pp-button\"\n          onClick={handleClickGetContact}\n        >Find Contact\n        </Button>\n        \n        <br />\n      </div>\n\n      <ContactComponent/>\n\n      {/* <div className=\"container fixed-bg-1 text-center\">\n      </div> */}\n    </Layout>\n  )};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}
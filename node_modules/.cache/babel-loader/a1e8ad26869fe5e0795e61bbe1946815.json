{"ast":null,"code":"var _jsxFileName = \"/home/permas/cs3219-ay2021-s1-project-2020-s1-g23/frontend/src/Pages/LoginPage.js\";\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Layout from '../Templates/Layout';\nimport * as Utils from '../utils';\n\nfunction getErrorLoginData(loginData) {\n  if (!loginData.email) {\n    return 'Email is a required field';\n  }\n\n  if (loginData.email && !Utils.validateEmail(loginData.email)) {\n    return 'Email is invalid';\n  }\n\n  if (!loginData.password) {\n    return 'Password is a required field';\n  } // form is valid, prints no error\n\n\n  return '';\n}\n\nconst initialState = {\n  email: '',\n  password: ''\n};\n\nfunction LoginPage() {\n  const [loginData, setLoginData] = useState(initialState);\n  const [error, setError] = useState(''); // update login fields\n\n  const handleChange = ({\n    target: {\n      value,\n      name\n    }\n  }) => {\n    setLoginData({ ...loginData,\n      [name]: value\n    });\n  };\n\n  const handleClick = () => {\n    const errorMsg = getErrorLoginData(loginData);\n\n    if (!errorMsg) {\n      setError('');\n      const email = Utils.trimValue(loginData.email); // *** PLACEHOLDER CODE: Send to backend ***\n\n      console.log(`Email: ${email}`);\n      console.log(`Password: ${loginData.password}`);\n    } else {\n      setError(errorMsg);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container fixed-bg text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center display-4 pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"PeerPrep\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-top\",\n    name: \"email\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Email\",\n    value: loginData.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-top\",\n    name: \"password\",\n    type: \"text\",\n    onChange: handleChange,\n    placeholder: \"Password\",\n    value: loginData.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    className: \"mt-5 pp-button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, error), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/signup\",\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Don't have an account? Click here to sign up!\")));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/permas/cs3219-ay2021-s1-project-2020-s1-g23/frontend/src/Pages/LoginPage.js"],"names":["React","useState","Button","Layout","Utils","getErrorLoginData","loginData","email","validateEmail","password","initialState","LoginPage","setLoginData","error","setError","handleChange","target","value","name","handleClick","errorMsg","trimValue","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Layout from '../Templates/Layout';\nimport * as Utils from '../utils';\n\nfunction getErrorLoginData(loginData) {\n  if (!loginData.email) {\n    return 'Email is a required field';\n  }\n  if (loginData.email && !Utils.validateEmail(loginData.email)) {\n    return 'Email is invalid';\n  }\n  if (!loginData.password) {\n    return 'Password is a required field';\n  }\n\n  // form is valid, prints no error\n  return '';\n}\n\nconst initialState = { email: '', password: '' };\n\nfunction LoginPage() {\n  const [loginData, setLoginData] = useState(initialState);\n  const [error, setError] = useState('');\n\n  // update login fields\n  const handleChange = ({ target: { value, name } }) => {\n    setLoginData({ ...loginData, [name]: value });\n  };\n\n  const handleClick = () => {\n    const errorMsg = getErrorLoginData(loginData);\n    if (!errorMsg) {\n      setError('');\n      const email = Utils.trimValue(loginData.email);\n\n      // *** PLACEHOLDER CODE: Send to backend ***\n      console.log(`Email: ${email}`);\n      console.log(`Password: ${loginData.password}`);\n    } else {\n      setError(errorMsg);\n    }\n  };\n\n  return (\n    <Layout>\n      <div className=\"container fixed-bg text-center\">\n        <h1 className=\"text-center display-4 pb-5\">PeerPrep</h1>\n        <form>\n          <input\n            className=\"input-top\"\n            name=\"email\"\n            type=\"text\"\n            onChange={handleChange}\n            placeholder=\"Email\"\n            value={loginData.email}\n          />\n          <br />\n          <input\n            className=\"input-top\"\n            name=\"password\"\n            type=\"text\"\n            onChange={handleChange}\n            placeholder=\"Password\"\n            value={loginData.password}\n          />\n        </form>\n        <Button\n          variant=\"primary\"\n          size=\"lg\"\n          className=\"mt-5 pp-button\"\n          onClick={handleClick}\n        >\n          Login\n        </Button>\n        <p className=\"error-message\">{error}</p>\n        <br />\n        <a href=\"/signup\" className=\"mt-5\">\n          Don&apos;t have an account? Click here to sign up!\n        </a>\n      </div>\n    </Layout>\n  );\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}
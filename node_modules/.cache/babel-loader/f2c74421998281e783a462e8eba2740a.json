{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { API_HOST } from '../../consts';\nimport { loadState, removeState, saveState } from '../localStorage';\nconst CONTACT_STATE_KEY = 'contacts';\nconst persistedContact = loadState(CONTACT_STATE_KEY);\nexport const contactSlice = createSlice({\n  name: 'contacts',\n  initialState: persistedContact,\n  reducers: {\n    setContacts: (state, action) => action.payload\n  }\n});\nexport const {\n  setContacts\n} = contactSlice.actions;\nexport const getContacts = () => dispatch => {\n  const apiUrl = `${API_HOST}/api/contacts`;\n  fetch(apiUrl, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(response => response.json()).then(result => {\n    saveState(CONTACT_STATE_KEY, result.data);\n    dispatch(setContacts(result.data));\n    console.log(result.data);\n  }).catch(err => console.log(err));\n};\nexport const clearContacts = () => dispatch => {\n  removeState(CONTACT_STATE_KEY);\n  dispatch(setContacts(null));\n};\nexport const selectContacts = state => state.contacts;\nexport default contactSlice.reducer;","map":{"version":3,"sources":["/home/permas/resthub/frontend/src/redux/slices/contactsSlice.js"],"names":["createSlice","API_HOST","loadState","removeState","saveState","CONTACT_STATE_KEY","persistedContact","contactSlice","name","initialState","reducers","setContacts","state","action","payload","actions","getContacts","dispatch","apiUrl","fetch","headers","method","then","response","json","result","data","console","log","catch","err","clearContacts","selectContacts","contacts","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,iBAAlD;AAEA,MAAMC,iBAAiB,GAAG,UAA1B;AACA,MAAMC,gBAAgB,GAAGJ,SAAS,CAACG,iBAAD,CAAlC;AAEA,OAAO,MAAME,YAAY,GAAGP,WAAW,CAAC;AACtCQ,EAAAA,IAAI,EAAE,UADgC;AAEtCC,EAAAA,YAAY,EAAEH,gBAFwB;AAGtCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAD/B;AAH4B,CAAD,CAAhC;AAQP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAkBJ,YAAY,CAACQ,OAArC;AAEP,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAD,IAAc;AAE7C,QAAMC,MAAM,GAAI,GAAEjB,QAAS,eAA3B;AACAkB,EAAAA,KAAK,CAACD,MAAD,EAAS;AACZE,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADG;AAIZC,IAAAA,MAAM,EAAE;AAJI,GAAT,CAAL,CAMGC,IANH,CAMSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANtB,EAOGF,IAPH,CAOSG,MAAD,IAAY;AAChBrB,IAAAA,SAAS,CAACC,iBAAD,EAAoBoB,MAAM,CAACC,IAA3B,CAAT;AACAT,IAAAA,QAAQ,CAACN,WAAW,CAACc,MAAM,CAACC,IAAR,CAAZ,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,IAAnB;AACD,GAXH,EAYGG,KAZH,CAYUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAZlB;AAaD,CAhBM;AAkBP,OAAO,MAAMC,aAAa,GAAG,MAAOd,QAAD,IAAc;AAC/Cd,EAAAA,WAAW,CAACE,iBAAD,CAAX;AACAY,EAAAA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR;AACD,CAHM;AAKP,OAAO,MAAMqB,cAAc,GAAIpB,KAAD,IAAWA,KAAK,CAACqB,QAAxC;AAEP,eAAe1B,YAAY,CAAC2B,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { API_HOST } from '../../consts';\nimport { loadState, removeState, saveState } from '../localStorage';\n\nconst CONTACT_STATE_KEY = 'contacts';\nconst persistedContact = loadState(CONTACT_STATE_KEY);\n\nexport const contactSlice = createSlice({\n  name: 'contacts',\n  initialState: persistedContact,\n  reducers: {\n    setContacts: (state, action) => action.payload,\n  },\n});\n\nexport const { setContacts } = contactSlice.actions;\n\nexport const getContacts = () => (dispatch) => {\n\n  const apiUrl = `${API_HOST}/api/contacts`; \n  fetch(apiUrl, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'GET',\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      saveState(CONTACT_STATE_KEY, result.data);\n      dispatch(setContacts(result.data));\n      console.log(result.data);\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const clearContacts = () => (dispatch) => {\n  removeState(CONTACT_STATE_KEY);\n  dispatch(setContacts(null));\n};\n\nexport const selectContacts = (state) => state.contacts;\n\nexport default contactSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}